
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000190  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000214  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000250  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a87  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000063d  00000000  00000000  00000d27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f9  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001760  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000382  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004da  00000000  00000000  00001b86  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002060  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ba 00 	call	0x174	; 0x174 <main>
  64:	0c 94 c6 00 	jmp	0x18c	; 0x18c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LCD_Command>:

void LCD_Clear()
{
    LCD_Command(0x01); /* Clear display */
    _delay_ms(2);
    LCD_Command(0x80); /* Cursor at home position */
  6c:	95 b3       	in	r25, 0x15	; 21
  6e:	9f 70       	andi	r25, 0x0F	; 15
  70:	28 2f       	mov	r18, r24
  72:	20 7f       	andi	r18, 0xF0	; 240
  74:	92 2b       	or	r25, r18
  76:	95 bb       	out	0x15, r25	; 21
  78:	95 b3       	in	r25, 0x15	; 21
  7a:	9e 7f       	andi	r25, 0xFE	; 254
  7c:	95 bb       	out	0x15, r25	; 21
  7e:	95 b3       	in	r25, 0x15	; 21
  80:	92 60       	ori	r25, 0x02	; 2
  82:	95 bb       	out	0x15, r25	; 21
  84:	32 e0       	ldi	r19, 0x02	; 2
  86:	3a 95       	dec	r19
  88:	f1 f7       	brne	.-4      	; 0x86 <LCD_Command+0x1a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <LCD_Command+0x20>
  8c:	95 b3       	in	r25, 0x15	; 21
  8e:	9d 7f       	andi	r25, 0xFD	; 253
  90:	95 bb       	out	0x15, r25	; 21
  92:	ef e8       	ldi	r30, 0x8F	; 143
  94:	f1 e0       	ldi	r31, 0x01	; 1
  96:	31 97       	sbiw	r30, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <LCD_Command+0x2a>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <LCD_Command+0x30>
  9c:	00 00       	nop
  9e:	25 b3       	in	r18, 0x15	; 21
  a0:	f0 e1       	ldi	r31, 0x10	; 16
  a2:	8f 9f       	mul	r24, r31
  a4:	c0 01       	movw	r24, r0
  a6:	11 24       	eor	r1, r1
  a8:	92 2f       	mov	r25, r18
  aa:	9f 70       	andi	r25, 0x0F	; 15
  ac:	89 2b       	or	r24, r25
  ae:	85 bb       	out	0x15, r24	; 21
  b0:	85 b3       	in	r24, 0x15	; 21
  b2:	82 60       	ori	r24, 0x02	; 2
  b4:	85 bb       	out	0x15, r24	; 21
  b6:	32 e0       	ldi	r19, 0x02	; 2
  b8:	3a 95       	dec	r19
  ba:	f1 f7       	brne	.-4      	; 0xb8 <LCD_Command+0x4c>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <LCD_Command+0x52>
  be:	85 b3       	in	r24, 0x15	; 21
  c0:	8d 7f       	andi	r24, 0xFD	; 253
  c2:	85 bb       	out	0x15, r24	; 21
  c4:	8f e9       	ldi	r24, 0x9F	; 159
  c6:	9f e0       	ldi	r25, 0x0F	; 15
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_Command+0x5c>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_Command+0x62>
  ce:	00 00       	nop
  d0:	08 95       	ret

000000d2 <LCD_Char>:
  d2:	95 b3       	in	r25, 0x15	; 21
  d4:	9f 70       	andi	r25, 0x0F	; 15
  d6:	28 2f       	mov	r18, r24
  d8:	20 7f       	andi	r18, 0xF0	; 240
  da:	92 2b       	or	r25, r18
  dc:	95 bb       	out	0x15, r25	; 21
  de:	95 b3       	in	r25, 0x15	; 21
  e0:	91 60       	ori	r25, 0x01	; 1
  e2:	95 bb       	out	0x15, r25	; 21
  e4:	95 b3       	in	r25, 0x15	; 21
  e6:	92 60       	ori	r25, 0x02	; 2
  e8:	95 bb       	out	0x15, r25	; 21
  ea:	32 e0       	ldi	r19, 0x02	; 2
  ec:	3a 95       	dec	r19
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_Char+0x1a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_Char+0x20>
  f2:	95 b3       	in	r25, 0x15	; 21
  f4:	9d 7f       	andi	r25, 0xFD	; 253
  f6:	95 bb       	out	0x15, r25	; 21
  f8:	ef e8       	ldi	r30, 0x8F	; 143
  fa:	f1 e0       	ldi	r31, 0x01	; 1
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <LCD_Char+0x2a>
 100:	00 c0       	rjmp	.+0      	; 0x102 <LCD_Char+0x30>
 102:	00 00       	nop
 104:	25 b3       	in	r18, 0x15	; 21
 106:	f0 e1       	ldi	r31, 0x10	; 16
 108:	8f 9f       	mul	r24, r31
 10a:	c0 01       	movw	r24, r0
 10c:	11 24       	eor	r1, r1
 10e:	92 2f       	mov	r25, r18
 110:	9f 70       	andi	r25, 0x0F	; 15
 112:	89 2b       	or	r24, r25
 114:	85 bb       	out	0x15, r24	; 21
 116:	85 b3       	in	r24, 0x15	; 21
 118:	82 60       	ori	r24, 0x02	; 2
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	32 e0       	ldi	r19, 0x02	; 2
 11e:	3a 95       	dec	r19
 120:	f1 f7       	brne	.-4      	; 0x11e <LCD_Char+0x4c>
 122:	00 c0       	rjmp	.+0      	; 0x124 <LCD_Char+0x52>
 124:	85 b3       	in	r24, 0x15	; 21
 126:	8d 7f       	andi	r24, 0xFD	; 253
 128:	85 bb       	out	0x15, r24	; 21
 12a:	8f e9       	ldi	r24, 0x9F	; 159
 12c:	9f e0       	ldi	r25, 0x0F	; 15
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_Char+0x5c>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_Char+0x62>
 134:	00 00       	nop
 136:	08 95       	ret

00000138 <LCD_Init>:
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	84 bb       	out	0x14, r24	; 20
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9c e9       	ldi	r25, 0x9C	; 156
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_Init+0x8>
 144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_Init+0xe>
 146:	00 00       	nop
 148:	82 e0       	ldi	r24, 0x02	; 2
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
 14e:	88 e2       	ldi	r24, 0x28	; 40
 150:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
 154:	8c e0       	ldi	r24, 0x0C	; 12
 156:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
 15a:	86 e0       	ldi	r24, 0x06	; 6
 15c:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
 166:	8f e9       	ldi	r24, 0x9F	; 159
 168:	9f e0       	ldi	r25, 0x0F	; 15
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_Init+0x32>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_Init+0x38>
 170:	00 00       	nop
 172:	08 95       	ret

00000174 <main>:
}

int main()
{
    LCD_Init(); /* Initialization of LCD*/
 174:	0e 94 9c 00 	call	0x138	; 0x138 <LCD_Init>

    // LCD_String("Jitbitan"); /* Write string on 1st line of LCD*/
    // LCD_Command(0xC0);      /* Go to 2nd line*/
    // LCD_String("Baroi");    /* Write string on 2nd line*/
    LCD_Char('J');
 178:	8a e4       	ldi	r24, 0x4A	; 74
 17a:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_Char>
    LCD_Command(0xC0);
 17e:	80 ec       	ldi	r24, 0xC0	; 192
 180:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_Command>
    LCD_Char('B');
 184:	82 e4       	ldi	r24, 0x42	; 66
 186:	0e 94 69 00 	call	0xd2	; 0xd2 <LCD_Char>
 18a:	ff cf       	rjmp	.-2      	; 0x18a <main+0x16>

0000018c <_exit>:
 18c:	f8 94       	cli

0000018e <__stop_program>:
 18e:	ff cf       	rjmp	.-2      	; 0x18e <__stop_program>
